/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui;

import dao.ProfesorDAO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Profesor;

/**
 *
 * @author anton
 */
public class GestionProfesor extends javax.swing.JDialog {
    private InsertarProfesor ip;
    private ActualizarProfesor ap;

    /**
     * Creates new form GestionProfesor
     */
    public GestionProfesor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ip=new InsertarProfesor(this,true);
        ap=new ActualizarProfesor(this,true);

        
        
    }
    
    
       private void cargarDatosEnTabla (){
        try {
            ProfesorDAO profesorDAO = new ProfesorDAO();
            List<Profesor> listaProfesor = profesorDAO.obtenerProfesor();
            
            DefaultTableModel model = (DefaultTableModel) visorProfesor.getModel();
            model.setRowCount(0); //Limpiar el modelo
            
            for(Profesor profe : listaProfesor){
                model.addRow(new Object[]{
                    profe.getCURP(),
                    profe.getNo_trabajador(),
                    profe.getNom_pila(),
                    profe.getApellido_pat(),
                    profe.getApellido_mat(),
                    profe.getRFC(),
                    profe.getNo_IMSS(),
                    profe.getEstado_civil(),
                    profe.getEmail_personal(),
                    profe.getCarreras_Id_carrera(),
                    profe.getDatos_laborales_No_profesor(),
                    profe.getDatos_academicos_Cedula(),
                    profe.getCA_Id_CA()});
            }
        } catch (SQLException ex) {
            System.out.println("No");
        }
    }
       
     
    
    private void buscarProfesorPorID(String nombre) {
       
            ProfesorDAO profesorDAO = new ProfesorDAO();
            List<Profesor> listaProfesor = profesorDAO.buscarProfesorPorNombre(nombre);
            
            DefaultTableModel model = (DefaultTableModel) visorProfesor.getModel();
            model.setRowCount(0); // Limpiar el modelo
            
            for (Profesor profe : listaProfesor) {
                model.addRow(new Object[]{
                    profe.getCURP(),
                    profe.getNo_trabajador(),
                    profe.getNom_pila(),
                    profe.getApellido_pat(),
                    profe.getApellido_mat(),
                    profe.getRFC(),
                    profe.getNo_IMSS(),
                    profe.getEstado_civil(),
                    profe.getEmail_personal(),
                    profe.getCarreras_Id_carrera(),
                    profe.getDatos_laborales_No_profesor(),
                    profe.getDatos_academicos_Cedula(),
                    profe.getCA_Id_CA()});
            }
        
    }
    
    private void eliminarProfesor(String id) {
            ProfesorDAO profesorDAO = new ProfesorDAO();
            profesorDAO.eliminarProfesor(id);
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visorProfesor = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDatoBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizarProfesor = new javax.swing.JButton();
        btnInsertar = new javax.swing.JButton();
        txtMostrarTodos = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel1.setText("Profesor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        visorProfesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CURP", "No_trabajador", "Nom_pila", "Apellido_pat", "Apellido_mat", "RFC", "No_IMSS", "Estado_civil", "Email_personal", "Carrera_Id_carrera", "Datos_laborales_No_profesor", "Datos_academicos_Cedula", "CA_Id_CA"
            }
        ));
        jScrollPane1.setViewportView(visorProfesor);

        jPanel3.setBackground(new java.awt.Color(154, 215, 139));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel2.setText("Id");

        txtDatoBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatoBusquedaActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        btnActualizarProfesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnActualizarProfesor.setText("Actualizar");
        btnActualizarProfesor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarProfesorMouseClicked(evt);
            }
        });

        btnInsertar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnInsertar.setText("Insertar");
        btnInsertar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertarMouseClicked(evt);
            }
        });
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        txtMostrarTodos.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        txtMostrarTodos.setText("Mostrar todos");
        txtMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMostrarTodosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel3.setText("Buscar por ID para eliminar o actualizar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(329, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtDatoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(btnBuscar))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnInsertar)
                        .addGap(26, 26, 26)
                        .addComponent(txtMostrarTodos)))
                .addContainerGap(341, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(377, 377, 377)
                .addComponent(btnEliminar)
                .addGap(31, 31, 31)
                .addComponent(btnActualizarProfesor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMostrarTodos)
                    .addComponent(btnInsertar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizarProfesor))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMostrarTodosActionPerformed
        cargarDatosEnTabla();
    }//GEN-LAST:event_txtMostrarTodosActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void txtDatoBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatoBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatoBusquedaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        ProfesorDAO profesorDAO = new ProfesorDAO();

        List<Profesor> profesores = profesorDAO.buscarProfesorPorNombre(txtDatoBusqueda.getText());
        if (!profesores.isEmpty()) {
            String curp= txtDatoBusqueda.getText();
            eliminarProfesor(curp);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró ningún profesor con ese CURP");
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnInsertarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertarMouseClicked
        ip.setLocationRelativeTo(null);
        ip.setVisible(true);
        
    }//GEN-LAST:event_btnInsertarMouseClicked

    private void btnActualizarProfesorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarProfesorMouseClicked
        ProfesorDAO profesorDAO = new ProfesorDAO();

        List<Profesor> profesores = profesorDAO.buscarProfesorPorNombre(txtDatoBusqueda.getText());
        if (!profesores.isEmpty()) {
            ap.setLocationRelativeTo(null);
            ap.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró ningún profesor con ese CURP");
        }
        
    }//GEN-LAST:event_btnActualizarProfesorMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        buscarProfesorPorID(txtDatoBusqueda.getText());
        ProfesorDAO profesorDAO = new ProfesorDAO();

        List<Profesor> profesores = profesorDAO.buscarProfesorPorNombre(txtDatoBusqueda.getText());
        if (!profesores.isEmpty()) {
            Profesor profe = profesores.get(0); 
            ap.mostrarDatos(profe);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró ningún profesor con ese CURP");
        }
        
    }//GEN-LAST:event_btnBuscarMouseClicked

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarProfesor;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDatoBusqueda;
    private javax.swing.JButton txtMostrarTodos;
    private javax.swing.JTable visorProfesor;
    // End of variables declaration//GEN-END:variables
}
